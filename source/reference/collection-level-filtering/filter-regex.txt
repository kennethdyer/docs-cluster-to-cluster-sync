.. _c2c-filter-regex:

##############################
Regular Expressions in Filters
##############################

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

.. versionadded:: 1.6

.. include:: /includes/api/facts/filter-regex.rst

Syntax
======

Regular Expressions can be used to match databases and collections for
``mongosync`` to use in :ref:`c2c-filtered-sync`. 

.. code-block:: json
   :copyable: false

   {
      "databaseRegex": {
         "pattern": "<string>",
         "options": "<string>"
      },
      "collectionRegex": {
         "pattern": "<string>",
         "options": "<string>"
      }
   }

Regular Expression in filter documents use the following fields:

.. list-table::
   :header-rows: 1

   * - Option
     - Type
     - Description

   * - ``collectionRegex``
     - document
     - Specifies which collections you want the filter
       to match.

   * - ``collectionRegex.options``
     - string
     - Regular expression options to use in the match.
       
   * - ``collectionRegex.pattern``
     - string
     - Regular expression pattern to match.


   * - ``databaseRegex``
     - document
     - Specifies which databases you want the filter 
       to match.

   * - ``databaseRegex.options``
     - string
     - Regular expression options to use in the match.

   * - ``databaseRegex.pattern``
     - string
     - Regular expression pattern to match.

These options are available to use with both the ``includeNamespaces``
and ``excludeNamespaces`` parameters.

Use Cases
=========

Details
=======

Regular Expression Options
--------------------------

``databaseRegex`` and ``collectionRegex`` each supports an ``options`` field,
which you can use to configure Regular Expression options.

The following options are available:

.. list-table::
   :header-rows: 1
   :widths: 10 60

   * - Option
     - Description

   * - ``i``
     - Enables case-insensitivity.

   * - ``m``
     - Enables use the ``^`` and ``$`` anchors.

   * - ``s``
     - Enables use of dot (``.``) characters to represent all characters.

   * - ``x``
     - Ignores whitespace characters in the pattern, unless escaped or included 
       in the character class.

       This option also causes the match to ignore characters in-between and
       to include unescaped hash (``#``) characters.



Learn More
==========
